import com.android.build.gradle.internal.tasks.databinding.DataBindingExportBuildInfoTask

apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'me.tatarka.retrolambda'
apply from: './dependencies.gradle'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.0"
    defaultConfig {
        applicationId "com.leo.genesistask"
        minSdkVersion 14
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //save apk with nice name
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    output.outputFile = new File(output.outputFile.parent,
                            output.outputFile.name.replace("app-release", appName + "_ver_${variant.versionName}_release")
                    )
                }
            }
        }
        debug {
            //save apk with nice name
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    output.outputFile = new File(output.outputFile.parent,
                            output.outputFile.name.replace("app-debug", appName + "_ver_${variant.versionName}_debug")
                    )
                }
            }
        }
    }

    dataBinding {
        enabled = true
    }

    compileOptions {
        incremental = false
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    repositories {
        maven { url "https://jitpack.io" }
        maven { url "https://mint.splunk.com/gradle/" }
    }
}
retrolambda {
    javaVersion JavaVersion.VERSION_1_7

}
tasks.withType(DataBindingExportBuildInfoTask) { task ->
    if (task.name.endsWith("AndroidTest")) {
        task.finalizedBy(tasks.create("${task.name}Workaround") << {
            task.output.deleteDir()
        })
    }
}
